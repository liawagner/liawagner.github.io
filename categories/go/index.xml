<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go on Hugo Future Imperfect</title>
    <link>/liawagner.github.io/categories/go/index.xml</link>
    <description>Recent content in go on Hugo Future Imperfect</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="/liawagner.github.io/categories/go/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Globe misleading new Fiber subscribers about Data Cap!</title>
      <link>/liawagner.github.io/blog/globe-misleading-new-fiber-subscribers-about-data-cap/</link>
      <pubDate>Tue, 12 Sep 2017 16:11:27 +0000</pubDate>
      
      <guid>/liawagner.github.io/blog/globe-misleading-new-fiber-subscribers-about-data-cap/</guid>
      <description>&lt;div style=&#34;-evernote-webclip:true&#34;&gt;  
&lt;div style=&#34;font-size: 16px; display: inline-block;&#34;&gt;
&lt;div style=&#34;font-weight:inherit;font-style:inherit;font-size:13px;font-family:&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,&amp;quot;Lucida Grande&amp;quot;,sans-serif;vertical-align:baseline;&#34;&gt;
&lt;div style=&#34;font-weight:inherit;font-style:inherit;font-size:13px;font-family:&amp;quot;fs_elliot&amp;quot;,Arial,sans-serif;vertical-align:baseline;color:rgb(33, 33, 33);background-color:rgb(255, 255, 255);line-height:1.25;text-align:left;&#34;&gt;
&lt;div style=&#34;font-weight:inherit;font-style:inherit;font-size:100%;font-family:inherit;vertical-align:baseline;transition:-moz-filter 200ms linear 0s;&#34;&gt;
&lt;div style=&#34;font-weight:inherit;font-style:inherit;font-size:100%;font-family:inherit;vertical-align:baseline;&#34;&gt;
&lt;div style=&#34;font-weight:inherit;font-style:inherit;font-size:100%;font-family:inherit;vertical-align:baseline;&#34;&gt;
&lt;div style=&#34;font-weight:inherit;font-style:inherit;font-size:100%;font-family:inherit;vertical-align:baseline;&#34;&gt;
&lt;div style=&#34;font-weight:inherit;font-style:inherit;font-size:100%;font-family:inherit;vertical-align:baseline;&#34;&gt;
&lt;div style=&#34;font-weight:inherit;font-style:inherit;font-size:100%;font-family:inherit;vertical-align:baseline;&#34;&gt;
&lt;div style=&#34;font-weight:inherit;font-style:inherit;font-size:100%;font-family:inherit;vertical-align:baseline;overflow:visible;&#34;&gt;
&lt;div style=&#34;font-weight:inherit;font-style:inherit;font-family:inherit;vertical-align:baseline;font-size:14px;border-radius:4px;line-height:1.5;background:rgba(0, 0, 0, 0) url(&amp;amp;quot;../images/steelhead/opstripe.png&amp;amp;quot;) repeat-y scroll right top;&#34;&gt;
&lt;div style=&#34;font-weight:inherit;font-style:inherit;font-size:100%;font-family:inherit;vertical-align:baseline;border-radius:4px;border-image:none;background:white none repeat scroll 0% 0%;border-bottom-right-radius:0px;border-top-right-radius:0px;&#34;&gt;
&lt;div style=&#34;font-weight:inherit;font-style:inherit;font-size:100%;font-family:inherit;vertical-align:baseline;&#34;&gt;
&lt;div style=&#34;font-weight:inherit;font-style:inherit;font-size:100%;font-family:inherit;vertical-align:baseline;overflow-x:auto;&#34;&gt;
&lt;p&gt;We are newly subscribed to Globe Fiber in Davao City since July 21, 2017:&lt;/p&gt;
&lt;p&gt;The plan is advertised as follows:&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:14px;font-family:inherit;vertical-align:baseline;&#34;&gt;&lt;em&gt;Broadband Plan 1599 Go Fast 20Mbps, 150GB&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:14px;font-family:inherit;vertical-align:baseline;&#34;&gt;&lt;em&gt;UP TO 20MBPS BROWSING SPEED&lt;/em&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:14px;font-family:inherit;vertical-align:baseline;&#34;&gt;&lt;em&gt;150GB DATA ALLOCATION&lt;/em&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:14px;font-family:inherit;vertical-align:baseline;&#34;&gt;&lt;em&gt;&lt;a href=&#34;https://shop.globe.com.ph/products/broadband/plan-1599-go-fast&#34;&gt;https://shop.globe.com.ph/products/broadband/plan-1599-go-fast&lt;span style=&#34;font-weight:inherit;font-style:inherit;font-size:100%;font-family:inherit;color:rgb(0, 157, 231);display:inline-block;height:12px;width:12px;background:rgba(0, 0, 0, 0) url(&amp;quot;../images/jive-icon-sprites-sml.png&amp;quot;) no-repeat scroll -655px -784px;margin:0px calc(-12px - 0.35ex) 0.7ex calc(0.35ex);vertical-align:middle;&#34;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/em&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:14px;font-family:fs_elliot, Arial, sans-serif;vertical-align:baseline;color:#212121;&#34;&gt;&lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:14px;font-family:fs_elliot, Arial, sans-serif;vertical-align:baseline;color:#212121;&#34;&gt;&lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:14px;font-family:inherit;vertical-align:baseline;color:#212121;&#34;&gt;At multiple occasions we inquired about what happens after we consume the 150 GB?&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Globe office in SM Davao City, as well as other Globe sales people trying to sell the contracts door-to-door in Matina, informed us in July before signing the contract, that we would be throttled to 30% of 20 Mbps!&lt;/li&gt;
&lt;li&gt;Customer Service (211), as well as a team of four installers from FiberHome confirmed, that upon reaching the 150 GB Data cap, &lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:14px;font-family:inherit;vertical-align:baseline;&#34;&gt;we would be throttled to 30% of 20 Mbps!&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:14px;font-family:inherit;vertical-align:baseline;&#34;&gt;After we reached our data cap on the 21st of August this month and calling &lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:14px;font-family:inherit;vertical-align:baseline;&#34;&gt;Customer Service (211), they again confirmed (even asking a supervisor), that upon reaching the 150 GB Data cap,&lt;/span&gt; &lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:14px;font-family:inherit;vertical-align:baseline;&#34;&gt;we would be throttled to 30% of 20 Mbps!&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:14px;font-family:inherit;vertical-align:baseline;&#34;&gt;Various newspaper publications and web forums also confirmed, that the throttle is supposed to be 30% of contracted bandwidth.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:14px;font-family:inherit;vertical-align:baseline;&#34;&gt;&lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:14px;font-family:inherit;vertical-align:baseline;&#34;&gt;&lt;strong&gt;Thus we should be throttled to 6 Mbps, but in reality we are being throttled to about 300 - 400 Kbps and &lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:14px;font-family:inherit;vertical-align:baseline;&#34;&gt;&lt;strong&gt;the internet is unusable:&lt;/strong&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;The abysmal quality of the throttling makes using the internet impossible, because Globe&#39;s faulty throttle technology results in major packet loss, which causes many websites and internet applications to fail completely.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:14px;font-family:inherit;vertical-align:baseline;&#34;&gt;Recently the following has been added to the advertising:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:14px;font-family:inherit;vertical-align:baseline;&#34;&gt;&lt;em&gt;&#34;Minimum guaranteed speeds: 30% of subscribed speed (for Fiber); 256kbps (for DSL/ LTE). 256kbps speed applies upon full consumption of data allowance.&#34;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;When I asked Globe people about this, they interpreted the 256 kbps throttle speed as only applying to DSL/LTE customers, but that Fiber customers would continue to be throttled to 30%. Since the wording is somewhat ambiguous, I accepted their explanation. This still seems to be the information that most customer service representatives give out, as yesterday (August 21), I received the same information when calling 211.&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:14px;font-family:inherit;vertical-align:baseline;&#34;&gt;After we filed a service ticket, a Globe FiberHome serviceman came to the house today (August 22) and a supervisor informed him, that &lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:14px;font-family:inherit;vertical-align:baseline;&#34;&gt;&lt;strong&gt;Globe has changed their policy this month for Fiber subscribers from 30% throttling speed to 512 Kbps!!&lt;/strong&gt;&lt;/span&gt; This seems to be the case, as people with a 256 Kbps throttle on DSL, report actual speeds of 150-200 Kbps. Thus our observed speed of 300-400 Kbps appears to be based on a nominal throttle-speed of 512 Kbps.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;But even this throttled speed of 400 Kbps is not provided properly, as the packet loss rate of 20% to 40% makes this completely unusable, even for the Globe Website, which hardly loads (see log below).&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:14px;font-family:inherit;vertical-align:baseline;&#34;&gt;Another&lt;/span&gt; &lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:14px;font-family:arial, sans-serif;vertical-align:baseline;&#34;&gt;Customer Service (211) representative informed me on August 22, quote: &#34;yes,&amp;nbsp; you might be throttled to 30%, or to a very slow speed or it may not load at all&#34;. - Does that mean Globe&#39;s throttling is just random and they do not have a policy at all?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:14px;font-family:inherit;vertical-align:baseline;&#34;&gt;I consider this new &#39;policy&#39; (if you can even call it that) for existing subscribers deceptive at best and probably a breach of contract, as we signed a 24 months contract&lt;/span&gt; &lt;strong&gt;on the basis of the information provided to us by the sales representatives as described above,&lt;/strong&gt;&lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:14px;font-family:inherit;vertical-align:baseline;&#34;&gt;&lt;strong&gt;fully expecting a throttle speed of 30%.&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Globe&#39;s customer service was unwilling to provide us with the 30% throttle speed until now and offered to change our contract to 10 Mbps &#34;GoBig&#34; which includes 400 GB of data.&lt;/p&gt;
&lt;p&gt;I complained by email and requested a bill adjustment for changing their promised service within the contract period. I also requested, that Globe would clearly state the throttling policy on their website and inform their customer service, FiberHome and sales people.&lt;/p&gt;
&lt;p&gt;Another customer in our neighborhood ran into the same problem.&lt;/p&gt;
&lt;p&gt;Have you had a similar experience with Globe Fiber?&lt;/p&gt;
&lt;p&gt;The inconsistent behaviour of Globe&#39;s throttling has also been observed by others: &lt;a href=&#34;https://www.spideylab.com/globe-home-broadband-plans-2016/&#34;&gt;https://www.spideylab.com/globe-home-broadband-plans-2016/&lt;span style=&#34;font-weight:inherit;font-style:inherit;font-size:100%;font-family:inherit;color:rgb(0, 157, 231);display:inline-block;height:12px;width:12px;background:rgba(0, 0, 0, 0) url(&amp;quot;../images/jive-icon-sprites-sml.png&amp;quot;) no-repeat scroll -655px -784px;margin:0px calc(-12px - 0.35ex) 0.7ex calc(0.35ex);vertical-align:middle;&#34;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Inconsistent behaviour of Globe throttling&lt;/h2&gt;
&lt;h2&gt;&lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:12pt;font-family:inherit;vertical-align:baseline;&#34;&gt;&lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:100%;font-family:inherit;vertical-align:baseline;text-decoration:underline;&#34;&gt;...&lt;/span&gt; &lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:100%;font-family:inherit;vertical-align:baseline;text-decoration:underline;&#34;&gt;Recently, many users who are under the new plans are complaining that Globe doesn’t follow the 30% subscribed speed rule when monthly volume allocation has been reached, while others do not experience the problem&lt;/span&gt;. &lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:10pt;font-family:inherit;vertical-align:baseline;&#34;&gt;&lt;strong&gt;Supposedly, when you already hit the limit, connection speed will get slower but becomes unlimited. Here are some of the observed scenarios:&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;span style=&#34;font-weight:inherit;font-style:inherit;font-size:100%;font-family:inherit;quotes:&amp;quot;&amp;quot; &amp;quot;&amp;quot;;&#34;&gt;
&lt;blockquote&gt;
&lt;span style=&#34;font-weight:inherit;font-style:inherit;font-size:100%;font-family:inherit;quotes:&amp;quot;&amp;quot; &amp;quot;&amp;quot;;&#34;&gt;
&lt;ol&gt;
&lt;li&gt;Users who have 50GB monthly allocation, will be throttled down to 30% of their subscribed speed when 50GB is reached (e.g., 10mbps x 0.3 = 3mbps) , but once additional 50GB is again consumed, the speed will go down to 256kbps. =&amp;gt; I confirmed this before, Globe says it will stay to 30% and will not go any lower.&lt;/li&gt;
&lt;li&gt;Users who have 50GB monthly allocation, will experience a slow speed of 256kbps once limit is reached. =&amp;gt; Obviously, not 30%.&lt;/li&gt;
&lt;li&gt;Users who have 50GB monthly allocation, will experience 30% throttled speed when 100GB is consumed. =&amp;gt; Allocation has been doubled, before being throttled down to 30%.&lt;/li&gt;
&lt;li&gt;Users who have 50GB monthly allocation, will experience a slow speed of 256kbps when 100GB is consumed =&amp;gt; Allocation has been doubled, before being throttled down to 256kbps.&lt;/li&gt;
&lt;li&gt;Some customer service representatives still insist that speed will just be throttled down to 30% when allocation is consumed.&amp;nbsp; Others say, it is 64kbps. =&amp;gt; 64kbps is against the NTC rule since broadband connections should have atleast 256 kbps.&lt;/li&gt;
&lt;li&gt;The 256kbps throlling only applies to LTE plans. DSL subscribers can enjoy the 30% unlimited internet. &amp;lt;= This is unfair, especially for those who signed up for LTE and was promised for the similar 30% throttled speed.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;If you are also experiencing this kind of speed even you are under DSL, kindly request a technician to visit you, or request Globe to have your connection be check, since the plans say that speed will only be throttled once, only 30% fixed across all plans.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;font-weight:inherit;font-style:inherit;font-size:100%;font-family:inherit;quotes:&amp;quot;&amp;quot; &amp;quot;&amp;quot;;&#34;&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/span&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;font-weight:inherit;font-style:inherit;font-size:100%;font-family:inherit;quotes:&amp;quot;&amp;quot; &amp;quot;&amp;quot;;&#34;&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/span&gt;&lt;/blockquote&gt;
&lt;h2&gt;&lt;strong&gt;Data Capping&lt;/strong&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;**&lt;span style=&#34;font-weight:inherit;font-style:inherit;font-size:100%;font-family:inherit;quotes:&amp;quot;&amp;quot; &amp;quot;&amp;quot;;&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;All new DSL plans still follow the 30% subscribed speed rule when monthly volume/bandwidth allocation has been reached. Meaning to say, for Plan 1299 10mbps, speed will go down to 3mbps when 100GB is reached (for DSL). It will reset every first day of the month, regardless of your plan’s cut-off date.&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;font-weight:inherit;font-style:inherit;font-size:100%;font-family:inherit;quotes:&amp;quot;&amp;quot; &amp;quot;&amp;quot;;&#34;&gt;&lt;/span&gt;**&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;------------&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;Packet loss log (one ping test per hour) - effect of excessive throttling:&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:10pt;font-family:&#39;andale mono&#39;, times;vertical-align:baseline;&#34;&gt;200 packets transmitted, 151 packets received, 24.5% packet loss&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:10pt;font-family:&#39;andale mono&#39;, times;vertical-align:baseline;&#34;&gt;200 packets transmitted, 142 packets received, 29.0% packet loss&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:10pt;font-family:&#39;andale mono&#39;, times;vertical-align:baseline;&#34;&gt;200 packets transmitted, 142 packets received, 29.0% packet loss&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:10pt;font-family:&#39;andale mono&#39;, times;vertical-align:baseline;&#34;&gt;200 packets transmitted, 150 packets received, 25.0% packet loss&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:10pt;font-family:&#39;andale mono&#39;, times;vertical-align:baseline;&#34;&gt;200 packets transmitted, 122 packets received, 39.0% packet loss&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:10pt;font-family:&#39;andale mono&#39;, times;vertical-align:baseline;&#34;&gt;200 packets transmitted, 128 packets received, 36.0% packet loss&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:10pt;font-family:&#39;andale mono&#39;, times;vertical-align:baseline;&#34;&gt;200 packets transmitted, 107 packets received, 46.5% packet loss&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:10pt;font-family:&#39;andale mono&#39;, times;vertical-align:baseline;&#34;&gt;200 packets transmitted, 144 packets received, 28.0% packet loss&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:10pt;font-family:&#39;andale mono&#39;, times;vertical-align:baseline;&#34;&gt;200 packets transmitted, 137 packets received, 31.5% packet loss&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:10pt;font-family:&#39;andale mono&#39;, times;vertical-align:baseline;&#34;&gt;200 packets transmitted, 138 packets received, 31.0% packet loss&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;margin:0px;padding:0px;border:0px none;font-weight:inherit;font-style:inherit;font-size:10pt;font-family:&#39;andale mono&#39;, times;vertical-align:baseline;&#34;&gt;200 packets transmitted, 126 packets received, 37.0% packet loss&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>/liawagner.github.io/blog/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/liawagner.github.io/blog/goisforlovers/</guid>
      <description>

&lt;p&gt;Hugo uses the excellent &lt;a href=&#34;http://golang.org/&amp;gt;&#34;&gt;go&lt;/a&gt; &lt;a href=&#34;http://golang.org/pkg/html/template/&amp;gt;&#34;&gt;html/template&lt;/a&gt; library for
its template engine. It is an extremely lightweight engine that provides a very
small amount of logic. In our experience that it is just the right amount of
logic to be able to create a good static website. If you have used other
template systems from different languages or frameworks you will find a lot of
similarities in go templates.&lt;/p&gt;

&lt;p&gt;This document is a brief primer on using go templates. The &lt;a href=&#34;http://golang.org/pkg/html/template/&amp;gt;&#34;&gt;go docs&lt;/a&gt;
provide more details.&lt;/p&gt;

&lt;h2 id=&#34;introduction-to-go-templates&#34;&gt;Introduction to Go Templates&lt;/h2&gt;

&lt;p&gt;Go templates provide an extremely simple template language. It adheres to the
belief that only the most basic of logic belongs in the template or view layer.
One consequence of this simplicity is that go templates parse very quickly.&lt;/p&gt;

&lt;p&gt;A unique characteristic of go templates is they are content aware. Variables and
content will be sanitized depending on the context of where they are used. More
details can be found in the &lt;a href=&#34;http://golang.org/pkg/html/template/&amp;gt;&#34;&gt;go docs&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;basic-syntax&#34;&gt;Basic Syntax&lt;/h2&gt;

&lt;p&gt;Go lang templates are html files with the addition of variables and
functions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Go variables and functions are accessible within {{ }}&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Accessing a predefined variable &amp;ldquo;foo&amp;rdquo;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ foo }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Parameters are separated using spaces&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Calling the add function with input of 1, 2:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ add 1 2 }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Methods and fields are accessed via dot notation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Accessing the Page Parameter &amp;ldquo;bar&amp;rdquo;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ .Params.bar }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Parentheses can be used to group items together&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if or (isset .Params &amp;quot;alt&amp;quot;) (isset .Params &amp;quot;caption&amp;quot;) }} Caption {{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;variables&#34;&gt;Variables&lt;/h2&gt;

&lt;p&gt;Each go template has a struct (object) made available to it. In hugo each
template is passed either a page or a node struct depending on which type of
page you are rendering. More details are available on the
&lt;a href=&#34;../../layout/variables&#34;&gt;variables&lt;/a&gt; page.&lt;/p&gt;

&lt;p&gt;A variable is accessed by referencing the variable name.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;title&amp;gt;{{ .Title }}&amp;lt;/title&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Variables can also be defined and referenced.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ $address := &amp;quot;123 Main St.&amp;quot;}}
{{ $address }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;functions&#34;&gt;Functions&lt;/h2&gt;

&lt;p&gt;Go template ship with a few functions which provide basic functionality. The go
template system also provides a mechanism for applications to extend the
available functions with their own. &lt;a href=&#34;../../layout/functions&#34;&gt;Hugo template
functions&lt;/a&gt; provide some additional functionality we believe
are useful for building websites. Functions are called by using their name
followed by the required parameters separated by spaces. Template
functions cannot be added without recompiling hugo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ add 1 2 }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;includes&#34;&gt;Includes&lt;/h2&gt;

&lt;p&gt;When including another template you will pass to it the data it will be
able to access. To pass along the current context please remember to
include a trailing dot. The templates location will always be starting at
the /layout/ directory within Hugo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ template &amp;quot;chrome/header.html&amp;quot; . }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;logic&#34;&gt;Logic&lt;/h2&gt;

&lt;p&gt;Go templates provide the most basic iteration and conditional logic.&lt;/p&gt;

&lt;h3 id=&#34;iteration&#34;&gt;Iteration&lt;/h3&gt;

&lt;p&gt;Just like in go, the go templates make heavy use of range to iterate over
a map, array or slice. The following are different examples of how to use
range.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 1: Using Context&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ range array }}
    {{ . }}
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Example 2: Declaring value variable name&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{range $element := array}}
    {{ $element }}
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Example 2: Declaring key and value variable name&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{range $index, $element := array}}
    {{ $index }}
    {{ $element }}
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;conditionals&#34;&gt;Conditionals&lt;/h3&gt;

&lt;p&gt;If, else, with, or, &amp;amp; and provide the framework for handling conditional
logic in Go Templates. Like range, each statement is closed with &lt;code&gt;end&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Go Templates treat the following values as false:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;false&lt;/li&gt;
&lt;li&gt;0&lt;/li&gt;
&lt;li&gt;any array, slice, map, or string of length zero&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example 1: If&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if isset .Params &amp;quot;title&amp;quot; }}&amp;lt;h4&amp;gt;{{ index .Params &amp;quot;title&amp;quot; }}&amp;lt;/h4&amp;gt;{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Example 2: If -&amp;gt; Else&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if isset .Params &amp;quot;alt&amp;quot; }}
    {{ index .Params &amp;quot;alt&amp;quot; }}
{{else}}
    {{ index .Params &amp;quot;caption&amp;quot; }}
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Example 3: And &amp;amp; Or&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if and (or (isset .Params &amp;quot;title&amp;quot;) (isset .Params &amp;quot;caption&amp;quot;))
    (isset .Params &amp;quot;attr&amp;quot;)}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Example 4: With&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;An alternative way of writing &amp;ldquo;if&amp;rdquo; and then referencing the same value
is to use &amp;ldquo;with&amp;rdquo; instead. With rebinds the context &lt;code&gt;.&lt;/code&gt; within its scope,
and skips the block if the variable is absent.&lt;/p&gt;

&lt;p&gt;The first example above could be simplified as:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ with .Params.title }}&amp;lt;h4&amp;gt;{{ . }}&amp;lt;/h4&amp;gt;{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Example 5: If -&amp;gt; Else If&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if isset .Params &amp;quot;alt&amp;quot; }}
    {{ index .Params &amp;quot;alt&amp;quot; }}
{{ else if isset .Params &amp;quot;caption&amp;quot; }}
    {{ index .Params &amp;quot;caption&amp;quot; }}
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;pipes&#34;&gt;Pipes&lt;/h2&gt;

&lt;p&gt;One of the most powerful components of go templates is the ability to
stack actions one after another. This is done by using pipes. Borrowed
from unix pipes, the concept is simple, each pipeline&amp;rsquo;s output becomes the
input of the following pipe.&lt;/p&gt;

&lt;p&gt;Because of the very simple syntax of go templates, the pipe is essential
to being able to chain together function calls. One limitation of the
pipes is that they only can work with a single value and that value
becomes the last parameter of the next pipeline.&lt;/p&gt;

&lt;p&gt;A few simple examples should help convey how to use the pipe.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 1 :&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if eq 1 1 }} Same {{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;is the same as&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ eq 1 1 | if }} Same {{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It does look odd to place the if at the end, but it does provide a good
illustration of how to use the pipes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 2 :&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ index .Params &amp;quot;disqus_url&amp;quot; | html }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Access the page parameter called &amp;ldquo;disqus_url&amp;rdquo; and escape the HTML.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 3 :&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if or (or (isset .Params &amp;quot;title&amp;quot;) (isset .Params &amp;quot;caption&amp;quot;))
    (isset .Params &amp;quot;attr&amp;quot;)}}
Stuff Here
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Could be rewritten as&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{  isset .Params &amp;quot;caption&amp;quot; | or isset .Params &amp;quot;title&amp;quot; |
    or isset .Params &amp;quot;attr&amp;quot; | if }}
Stuff Here
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;context-aka-the-dot&#34;&gt;Context (aka. the dot)&lt;/h2&gt;

&lt;p&gt;The most easily overlooked concept to understand about go templates is that {{ . }}
always refers to the current context. In the top level of your template this
will be the data set made available to it. Inside of a iteration it will have
the value of the current item. When inside of a loop the context has changed. .
will no longer refer to the data available to the entire page. If you need to
access this from within the loop you will likely want to set it to a variable
instead of depending on the context.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ $title := .Site.Title }}
{{ range .Params.tags }}
&amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;{{ $baseurl }}/tags/{{ . | urlize }}&amp;quot;&amp;gt;
    {{ . }}&amp;lt;/a&amp;gt; - {{ $title }} &amp;lt;/li&amp;gt;
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice how once we have entered the loop the value of {{ . }} has changed. We
have defined a variable outside of the loop so we have access to it from within
the loop.&lt;/p&gt;

&lt;h1 id=&#34;hugo-parameters&#34;&gt;Hugo Parameters&lt;/h1&gt;

&lt;p&gt;Hugo provides the option of passing values to the template language
through the site configuration (for sitewide values), or through the meta
data of each specific piece of content. You can define any values of any
type (supported by your front matter/config format) and use them however
you want to inside of your templates.&lt;/p&gt;

&lt;h2 id=&#34;using-content-page-parameters&#34;&gt;Using Content (page) Parameters&lt;/h2&gt;

&lt;p&gt;In each piece of content you can provide variables to be used by the
templates. This happens in the &lt;a href=&#34;../../content/front-matter&#34;&gt;front matter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;An example of this is used in this documentation site. Most of the pages
benefit from having the table of contents provided. Sometimes the TOC just
doesn&amp;rsquo;t make a lot of sense. We&amp;rsquo;ve defined a variable in our front matter
of some pages to turn off the TOC from being displayed.&lt;/p&gt;

&lt;p&gt;Here is the example front matter:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
title: &amp;quot;Permalinks&amp;quot;
date: &amp;quot;2013-11-18&amp;quot;
aliases:
  - &amp;quot;/doc/permalinks/&amp;quot;
groups: [&amp;quot;extras&amp;quot;]
groups_weight: 30
notoc: true
---
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here is the corresponding code inside of the template:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  {{ if not .Params.notoc }}
    &amp;lt;div id=&amp;quot;toc&amp;quot; class=&amp;quot;well col-md-4 col-sm-6&amp;quot;&amp;gt;
    {{ .TableOfContents }}
    &amp;lt;/div&amp;gt;
  {{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;using-site-config-parameters&#34;&gt;Using Site (config) Parameters&lt;/h2&gt;

&lt;p&gt;In your top-level configuration file (eg, &lt;code&gt;config.yaml&lt;/code&gt;) you can define site
parameters, which are values which will be available to you in chrome.&lt;/p&gt;

&lt;p&gt;For instance, you might declare:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;params:
  CopyrightHTML: &amp;quot;Copyright &amp;amp;#xA9; 2013 John Doe. All Rights Reserved.&amp;quot;
  TwitterUser: &amp;quot;spf13&amp;quot;
  SidebarRecentLimit: 5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Within a footer layout, you might then declare a &lt;code&gt;&amp;lt;footer&amp;gt;&lt;/code&gt; which is only
provided if the &lt;code&gt;CopyrightHTML&lt;/code&gt; parameter is provided, and if it is given,
you would declare it to be HTML-safe, so that the HTML entity is not escaped
again.  This would let you easily update just your top-level config file each
January 1st, instead of hunting through your templates.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{if .Site.Params.CopyrightHTML}}&amp;lt;footer&amp;gt;
&amp;lt;div class=&amp;quot;text-center&amp;quot;&amp;gt;{{.Site.Params.CopyrightHTML | safeHtml}}&amp;lt;/div&amp;gt;
&amp;lt;/footer&amp;gt;{{end}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;An alternative way of writing the &amp;ldquo;if&amp;rdquo; and then referencing the same value
is to use &amp;ldquo;with&amp;rdquo; instead. With rebinds the context &lt;code&gt;.&lt;/code&gt; within its scope,
and skips the block if the variable is absent:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{with .Site.Params.TwitterUser}}&amp;lt;span class=&amp;quot;twitter&amp;quot;&amp;gt;
&amp;lt;a href=&amp;quot;https://twitter.com/{{.}}&amp;quot; rel=&amp;quot;author&amp;quot;&amp;gt;
&amp;lt;img src=&amp;quot;/images/twitter.png&amp;quot; width=&amp;quot;48&amp;quot; height=&amp;quot;48&amp;quot; title=&amp;quot;Twitter: {{.}}&amp;quot;
 alt=&amp;quot;Twitter&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;
&amp;lt;/span&amp;gt;{{end}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally, if you want to pull &amp;ldquo;magic constants&amp;rdquo; out of your layouts, you can do
so, such as in this example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;nav class=&amp;quot;recent&amp;quot;&amp;gt;
  &amp;lt;h1&amp;gt;Recent Posts&amp;lt;/h1&amp;gt;
  &amp;lt;ul&amp;gt;{{range first .Site.Params.SidebarRecentLimit .Site.Recent}}
    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;{{.RelPermalink}}&amp;quot;&amp;gt;{{.Title}}&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
  {{end}}&amp;lt;/ul&amp;gt;
&amp;lt;/nav&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>